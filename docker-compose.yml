version: "3.5"
services:
  postgres:
    image: "postgres:latest"
    ports:
      - "13080:5432"
    networks:
      - mynetwork
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres

  server1:
    build: ./Bmstu-Support-Website
    restart: always
    container_name: server1
    depends_on:
      - postgres
    ports:
      - "8081:8081"
    networks:
      - mynetwork

  server2:
    build: ./Bmstu-Support-Website
    restart: always
    container_name: server2
    depends_on:
      - postgres
    ports:
      - "8082:8081"
    networks:
      - mynetwork

  server3:
    build: ./Bmstu-Support-Website
    restart: always
    container_name: server3
    depends_on:
      - postgres
    ports:
      - "8083:8081"
    networks:
      - mynetwork
  nginx:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/balancer.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    environment:
      - NGINX_PORT=80
    networks:
      - mynetwork

  grafana:
    image: "grafana/grafana-oss"
    restart: always
    volumes:
      - grafana-storage:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - mynetwork

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  prometheus_data:
  grafana-storage:
